# Generated by Django 4.2.11 on 2024-05-23 00:46

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Curso',
            fields=[
                ('data_criacao', models.DateTimeField(auto_now_add=True, db_column='t_____criacao', db_comment='Data de inclusão do objeto')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, db_column='t_____ulat', db_comment='Data da última atualização do objeto')),
                ('ativo', models.BooleanField(db_column='f_____ativo', db_comment='Indicador se é objeto ainda está ativo', default=True)),
                ('id', models.BigAutoField(db_column='ccursosequencial', db_comment='Chave da tabela tbcurso', primary_key=True, serialize=False)),
                ('nome', models.CharField(db_column='ncursonome', db_comment='Nome do curso', max_length=50, unique=True)),
                ('valor', models.DecimalField(db_column='vcursopreco', db_comment='Valor do curso', decimal_places=2, max_digits=9)),
                ('descricao_trilha', models.TextField(db_column='ecursodescricao', db_comment='Descrição do curso')),
                ('publico_alvo', models.TextField(db_column='ecursopublico', db_comment='Público-alvo do curso')),
                ('carga_horaria', models.IntegerField(db_column='acursocarga', db_comment='Carga horária do curso')),
            ],
            options={
                'verbose_name': 'Curso',
                'verbose_name_plural': 'Cursos',
                'db_table': 'tbcurso',
            },
        ),
        migrations.CreateModel(
            name='Turma',
            fields=[
                ('data_criacao', models.DateTimeField(auto_now_add=True, db_column='t_____criacao', db_comment='Data de inclusão do objeto')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, db_column='t_____ulat', db_comment='Data da última atualização do objeto')),
                ('ativo', models.BooleanField(db_column='f_____ativo', db_comment='Indicador se é objeto ainda está ativo', default=True)),
                ('id', models.BigAutoField(db_column='cturmasequencial', db_comment='Identificador do Curso', primary_key=True, serialize=False)),
                ('professor', models.CharField(db_column='nturmaprofessor', db_comment='Nome do Professor', max_length=50)),
                ('turno', models.CharField(choices=[('M', 'Manhã'), ('T', 'Tarde'), ('V', 'Vespertino'), ('N', 'Noite'), ('I', 'Integral')], db_column='cturmaturno', db_comment='Turno da Turma', max_length=1)),
                ('seg', models.BooleanField(db_column='fturmasegunda', db_comment='Indicador se acontece às segundas-feiras', default=False)),
                ('ter', models.BooleanField(db_column='fturmaterca', db_comment='Indicador se acontece às terças-feiras', default=False)),
                ('qua', models.BooleanField(db_column='fturmaquarta', db_comment='Indicador se acontece às quartas-feiras', default=False)),
                ('qui', models.BooleanField(db_column='fturmaquinta', db_comment='Indicador se acontece às quintas-feiras', default=False)),
                ('sex', models.BooleanField(db_column='fturmasexta', db_comment='Indicador se acontece às sextas-feiras', default=False)),
                ('sab', models.BooleanField(db_column='fturmasabado', db_comment='Indicador se acontece aos sábados', default=False)),
                ('inicio', models.DateField(db_column='dturmainicio', db_comment='Data do início da turma')),
                ('final', models.DateField(db_column='dturmafinal', db_comment='Data do final da turma')),
                ('horario', models.CharField(db_column='eturmahorario', db_comment='Horário da turma', max_length=13)),
                ('id_curso', models.ForeignKey(db_column='ccursosequencial', on_delete=django.db.models.deletion.RESTRICT, related_name='curso_participa_turma', to='apis.curso')),
            ],
            options={
                'verbose_name': 'Turma',
                'verbose_name_plural': 'Turmas',
                'db_table': 'tbturma',
            },
        ),
        migrations.CreateModel(
            name='Trilha',
            fields=[
                ('data_criacao', models.DateTimeField(auto_now_add=True, db_column='t_____criacao', db_comment='Data de inclusão do objeto')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, db_column='t_____ulat', db_comment='Data da última atualização do objeto')),
                ('ativo', models.BooleanField(db_column='f_____ativo', db_comment='Indicador se é objeto ainda está ativo', default=True)),
                ('id', models.BigAutoField(db_column='ctrilhsequencial', db_comment='Chave da tabela tbtrilha', primary_key=True, serialize=False)),
                ('nome', models.CharField(db_column='ntrilhnome', db_comment='Nome da trilha', max_length=50, unique=True)),
                ('valor', models.DecimalField(db_column='vtrilhpreco', db_comment='Valor da trilha', decimal_places=2, max_digits=9)),
                ('descricao_trilha', models.TextField(db_column='etrilhdescricao', db_comment='Descrição da trilha')),
                ('publico_alvo', models.TextField(db_column='etrilhpublico', db_comment='Público-alvo da trilha')),
                ('carga_horaria', models.IntegerField(db_column='atrilhcarga', db_comment='Carga horária da trilha')),
            ],
            options={
                'verbose_name': 'Trilha',
                'verbose_name_plural': 'Trilhas',
                'db_table': 'tbtrilha',
                'indexes': [models.Index(fields=['id'], name='ptrilhchave'), models.Index(fields=['nome'], name='utrilhnome')],
            },
        ),
        migrations.CreateModel(
            name='CursoTrilha',
            fields=[
                ('data_criacao', models.DateTimeField(auto_now_add=True, db_column='t_____criacao', db_comment='Data de inclusão do objeto')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, db_column='t_____ulat', db_comment='Data da última atualização do objeto')),
                ('ativo', models.BooleanField(db_column='f_____ativo', db_comment='Indicador se é objeto ainda está ativo', default=True)),
                ('id', models.BigAutoField(db_column='ccurtrsequencial', db_comment='Chave da tabela tbcursotrilha', primary_key=True, serialize=False)),
                ('id_curso', models.ForeignKey(db_column='ccursosequencial', db_comment='Chave de ligação com a tabela tbcurso', on_delete=django.db.models.deletion.RESTRICT, to='apis.curso')),
                ('id_trilha', models.ForeignKey(db_column='ctrilhasequencial', db_comment='Chave de ligação com a tabela tbtrilha', on_delete=django.db.models.deletion.RESTRICT, to='apis.trilha')),
            ],
            options={
                'verbose_name': 'Curso Trilha',
                'verbose_name_plural': 'Cursos Trilhas',
                'db_table': 'tbcursotrilha',
            },
        ),
        migrations.AddIndex(
            model_name='curso',
            index=models.Index(fields=['id'], name='pcursochave'),
        ),
        migrations.AddIndex(
            model_name='curso',
            index=models.Index(fields=['nome'], name='ucursonome'),
        ),
        migrations.AddIndex(
            model_name='turma',
            index=models.Index(fields=['id'], name='pturmachave'),
        ),
        migrations.AddIndex(
            model_name='turma',
            index=models.Index(fields=['id_curso'], name='fturmacurso'),
        ),
        migrations.AddIndex(
            model_name='cursotrilha',
            index=models.Index(fields=['id'], name='pcurtrchave'),
        ),
        migrations.AddIndex(
            model_name='cursotrilha',
            index=models.Index(fields=['id_trilha', 'id_curso'], name='ucurtrchave'),
        ),
        migrations.AddIndex(
            model_name='cursotrilha',
            index=models.Index(fields=['id_trilha'], name='icurtridtrilha'),
        ),
        migrations.AddIndex(
            model_name='cursotrilha',
            index=models.Index(fields=['id_curso'], name='icurtridcurso'),
        ),
        migrations.AlterUniqueTogether(
            name='cursotrilha',
            unique_together={('id_curso', 'id_trilha')},
        ),
    ]
